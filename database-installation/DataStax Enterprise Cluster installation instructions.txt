
-------------------------------------------------------------------------------------
-- STEP-0: General information & Preparations
-------------------------------------------------------------------------------------

DSE Configuration:
~~~~~~~~~~~~~~~~~~~~
General configuration: https://docs.datastax.com/en/dse/6.8/dse-dev/datastax_enterprise/config/configTOC.html

For recommended production settings: https://docs.datastax.com/en/dse/6.8/dse-dev/datastax_enterprise/config/configRecommendedSettings.html

Recommended capacity planning guide for DSE: https://docs.datastax.com/en/dseplanning/docs/capacityPlanning.html


Clearing the data from DataStax Enterprise:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://docs.datastax.com/en/dse/6.8/dse-dev/datastax_enterprise/operations/opsClearData.html

Please refer to Package installation steps. Please also see the "Stop" details before clearing data.


Configuration files in the DSE node:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Configuration files are available at '/etc/dse/cassandra/' in a DSE node.


Log files in the DSE node:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Log files are available at '/var/log/cassandra/' in a DSE node.


Starting and stopping DSE cluster node from command-line:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sudo service dse start
sudo service dse stop


DataStax enterprise license terms:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://www.datastax.com/legal/datastax-enterprise-terms


See list of available Ubuntu images in GCP:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gcloud compute images list --filter ubuntu-os-cloud

... ... ...
... ... ...
NAME: ubuntu-1804-bionic-v20230308
PROJECT: ubuntu-os-cloud
FAMILY: ubuntu-1804-lts
DEPRECATED:
STATUS: READY
... ... ...
... ... ...
NAME: ubuntu-2004-focal-v20230302
PROJECT: ubuntu-os-cloud
FAMILY: ubuntu-2004-lts
DEPRECATED:
STATUS: READY
... ... ...
... ... ...

melissa.herrera@datastax.com

-------------------------------------------------------------------------------------
-- STEP-1: Deploy DSE OpsCenter in GCP
-------------------------------------------------------------------------------------


Launch the Ubuntu 18.04 LST based VM in GCP:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gcloud compute instances create opscenter --image ubuntu-1804-bionic-v20230308 --image-project ubuntu-os-cloud --local-ssd interface=nvme --machine-type=n2-highmem-2 --zone=northamerica-northeast2-a


From SSH terminal issue the following commands:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$> sudo apt-get update
$> sudo apt update


Install OpenJDK 8 install on Ubuntu:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
REF: https://docs.datastax.com/en/jdk-install/doc/jdk-install/installOpenJdkDeb.html

$> sudo apt-get install openjdk-8-jdk



Install DSE OpsCenter on GCP VM:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
REF: https://docs.datastax.com/en/installing/docs/opscInstallDeb.html

Once installed, configure firewall to enable http & https traffic and ingress on port 8888

And then launch the OpsCenter UI @ http://opscenter-host:8888/  where 'opscenter-host' is the public IP address of VM instance where you installed the DSE OpsCenter.




-- -------------------------------------------------------------------------------
-- STEP-2: Instanciate & prepare 3 VMs in GCP for the DataStax Enterprise cluster
-- --------------------------------------------------------------------------------

Issue the following commands via CLOUD SHELL Terminal in GCP Console.

gcloud compute instances create dse-1 --image ubuntu-2004-focal-v20230302 --image-project ubuntu-os-cloud --local-ssd interface=nvme --local-ssd interface=nvme --local-ssd interface=nvme --local-ssd interface=nvme --machine-type=n2-highmem-4 --zone=northamerica-northeast2-a

gcloud compute instances create dse-2 --image ubuntu-2004-focal-v20230302 --image-project ubuntu-os-cloud --local-ssd interface=nvme --local-ssd interface=nvme --local-ssd interface=nvme --local-ssd interface=nvme --machine-type=n2-highmem-4 --zone=northamerica-northeast2-a

gcloud compute instances create dse-3 --image ubuntu-2004-focal-v20230302 --image-project ubuntu-os-cloud --local-ssd interface=nvme --local-ssd interface=nvme --local-ssd interface=nvme --local-ssd interface=nvme --machine-type=n2-highmem-4 --zone=northamerica-northeast2-a


List attached NVMe disk drives :
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SSH into each of the above 3 VMs to ensure each one has 4 NVMe SSD of 375GB each mounted

$> lsblk

Should have similar to the following as part of the Output
... ... ...
... ... ...
nvme0n1 259:0    0   375G  0 disk
nvme0n2 259:1    0   375G  0 disk
nvme0n3 259:2    0   375G  0 disk
nvme0n4 259:3    0   375G  0 disk
... ... ...
... ... ...


Configure the VMs for SSH connection:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Generate SSH keys on your local machine:
ssh-keygen -t rsa -f ~/.ssh/gcloud-ssh-dse-vms -C syed.junaid@yoppworks.com
ssh-keygen -p -N "" -m pem -f ~/.ssh/gcloud-ssh-dse-vms


Edit dse-1, dse-2, and dse-3 nodes (created above) in GCP console
and, for each
a.) Allow HTTP and HTTPS traffic in 'firewalls' section AND add dse-ports tag
b.) Add contents of 'gcloud-ssh-dse-vms.pub' as another SSH Key for the VM instance


Connect to each of the GCP VM instances via SSH from local machine terminal:
For example,
$> ssh -i ~/.ssh/gcloud-ssh-dse-vms syed.junaid@34.130.185.204
here 34.130.185.204 is the IP address of the dse-x node we are trying to connect.


Install Open JDK 8 on each of the 3 dse-x nodes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
REF: https://docs.datastax.com/en/jdk-install/doc/jdk-install/installOpenJdkDeb.html

sudo apt-get update
sudo apt-get install openjdk-8-jdk


Create RAID0 from attached NVMe disks:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://cloud.google.com/compute/docs/disks/add-local-ssd#formatandmount
Please see 'Format and mount multiple local SSD partitions into a single logical volume' section

sudo apt update && sudo apt install mdadm --no-install-recommends

find /dev/ | grep google-local-nvme-ssd

sudo mdadm --create /dev/md0 --level=0 --raid-devices=4 \
 /dev/disk/by-id/google-local-nvme-ssd-0 \
 /dev/disk/by-id/google-local-nvme-ssd-1 \
 /dev/disk/by-id/google-local-nvme-ssd-2 \
 /dev/disk/by-id/google-local-nvme-ssd-3 \

sudo mdadm --detail --prefer=by-id /dev/md0

sudo mkfs.ext4 -F /dev/md0

sudo mkdir -p /mnt/disks/cassandra_data

sudo mount /dev/md0 /mnt/disks/cassandra_data

sudo chmod a+w /mnt/disks/cassandra_data

echo UUID=`sudo blkid -s UUID -o value /dev/md0` /mnt/disks/cassandra_data ext4 discard,defaults,nofail 0 2 | sudo tee -a /etc/fstab

cat /etc/fstab

Create 'cassandra' user with 'cassandra' password:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sudo adduser cassandra
sudo usermod -aG sudo cassandra


Create the required folders in RAID0:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sudo chown -R cassandra:cassandra /mnt/disks/cassandra_data
sudo chmod 770 /mnt/disks/cassandra_data

sudo mkdir /mnt/disks/cassandra_data/data
sudo chown -R cassandra:cassandra /mnt/disks/cassandra_data/data
sudo chmod 755 /mnt/disks/cassandra_data/data

sudo mkdir /mnt/disks/cassandra_data/metadata
sudo chown -R cassandra:cassandra /mnt/disks/cassandra_data/metadata
sudo chmod 755 /mnt/disks/cassandra_data/metadata

sudo mkdir /mnt/disks/cassandra_data/saved_caches
sudo chown -R cassandra:cassandra /mnt/disks/cassandra_data/saved_caches
sudo chmod 755 /mnt/disks/cassandra_data/saved_caches

sudo mkdir /mnt/disks/cassandra_data/cdc_raw
sudo chown -R cassandra:cassandra /mnt/disks/cassandra_data/cdc_raw
sudo chmod 755 /mnt/disks/cassandra_data/cdc_raw

sudo mkdir /mnt/disks/cassandra_data/commitlog
sudo chown -R cassandra:cassandra /mnt/disks/cassandra_data/commitlog
sudo chmod 755 /mnt/disks/cassandra_data/commitlog

sudo mkdir /mnt/disks/cassandra_data/hints
sudo chown -R cassandra:cassandra /mnt/disks/cassandra_data/hints
sudo chmod 755 /mnt/disks/cassandra_data/hints

sudo ls -al /mnt/disks/cassandra_data/



-- --------------------------------------------------------------------------------
-- STEP-3: Installing a DataStax Enterprise cluster using Lifecycle Manager
-- --------------------------------------------------------------------------------

In 'SSH credentials' section (one time):
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a.) Select 'Private Key' as 'SSH Login' option
b.) Copy 'gcloud-ssh-dse-vms' private key contents in 'SSH Private Key' box
c.) enter 'syed.junaid' in the Login User box
d.) Select 'SUDO' as 'Escalation Privileges' choice and leave the 'SUDO to this user' & 'SUDO password' boxes empty


Configure data directories for Cassandra.YAML configuration in Lifecycle Manager (one time):
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Go into 'Configuration Profiles' in Lifecycle Manager and assign directories for following properties as shown below:

    data_file_directories:      /mnt/disks/cassandra_data/data
    metadata_directory:         /mnt/disks/cassandra_data/metadata
    saved_caches_directory:     /mnt/disks/cassandra_data/saved_caches
    cdc_raw_directory:          /mnt/disks/cassandra_data/cdc_raw
    commitlog_directory:        /mnt/disks/cassandra_data/commitlog
    hints_directory:            /mnt/disks/cassandra_data/hints

Deploy the cluster:
~~~~~~~~~~~~~~~~~~~~
Follow the instructions @
https://docs.datastax.com/en/opscenter/docs/6.8/LCM/opscLCMInstallDSE.html
For this deployment


Check directories after deployment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cat /etc/dse/cassandra/cassandra.yaml |grep director

==========================================================================================================
9042,9142,7000,7001,7199,10000,9180,9100,9160,19042,19142
=========================================================================================================
To find out deployed Linux OS and Version for ScyllaDB nodes
$> cat /etc/os-release


To download a open-source Cassandra distribution
$> wget https://dlcdn.apache.org/cassandra/4.1.0/apache-cassandra-4.1.0-bin.tar.gz


To expand unzip the distribution to the folder
$> tar -xzf apache-cassandra-4.1.0-bin.tar.gz

-- NOTE: the above will create a 'apache-cassandra-4.1.0' folder in the current directory



Make the following changes to '~/apache-cassandra-4.1.0/conf/cassandra.yaml' file:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

cluster_name: 'Cassandra'



Visit URL:
https://console.cloud.google.com/marketplace/details/click-to-deploy-images/cassandra?project=scylla-cassandra-comparison
